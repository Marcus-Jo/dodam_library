<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- 모든 SQL문을 mapper태그 안에 작성 -->
<mapper namespace="searchMapper">
	
	<!-- resultmap 작성 -->
	<resultMap type="com.potato.project.common.vo.BookCateVO" id="cate">
		<id column="KDC_NUM" 			property="kdcNum"/>
		<result column="KDC_NAME" 		property="kdcName"/>
		<collection property="bookList" resultMap="book"/>
	</resultMap>
		
	<resultMap type="com.potato.project.common.vo.BookVO" id="book">
		<id column="BOOK_CODE" 			property="bookCode"/>
		<result column="ISBN" 			property="isbn"/>
		<result column="KDC" 			property="kdc"/>
		<result column="KDC_NUM" 		property="kdcNum"/>
		<result column="KDC_NAME" 		property="kdcName"/>
		<result column="WRITER" 		property="writer"/>
		<result column="TRANSLATOR" 	property="translator"/>
		<result column="TITLE" 			property="title"/>
		<result column="PAGE" 			property="page"/>
		<result column="BOOK_SIZE" 		property="bookSize"/>
		<result column="KEYWORD" 		property="keyword"/>
		<result column="PUBLISHER" 		property="publisher"/>
		<result column="PUB_DATE" 		property="pubDate"/>
		<result column="SUMMARY" 		property="summary"/>
		<result column="INTRO" 			property="intro"/>
		<result column="INPUT_DATE" 	property="inputDate"/>
		<result column="AREA" 			property="area"/>
		<result column="STATUS" 		property="status"/>
		<result column="RENTAL_ID" 		property="rentalId"/>
		<result column="RESERVE_ID" 	property="reserveId"/>
		<association property="bookImgVO" resultMap="bookImg"/>
	</resultMap>
	
	<resultMap type="com.potato.project.common.vo.BookImgVO" id="bookImg">
		<id column="IMG_CODE" 				property="imgCode"/>
		<result column="ORIGIN_IMG_NAME" 	property="originImgName"/>
		<result column="ATTACHED_IMG_NAME" 	property="attachedImgName"/>
		<result column="BOOK_CODE" 			property="bookCode"/>	
	</resultMap>
	
	<resultMap type="com.potato.project.common.vo.RentalVO" id="rental">
		<id column="RENTAL_CODE" 		property="rentalCode"/>
		<result column="ID" 			property="id"/>
		<result column="BOOK_CODE" 		property="bookCode"/>
		<result column="RENTAL_DATE" 	property="rentalDate"/>	
		<result column="RETURN_DATE" 	property="returnDate"/>	
		<result column="LIMIT_DATE" 	property="limitDate"/>
		<association property="bookVO" resultMap="book"/>	
	</resultMap>
	
	<resultMap type="com.potato.project.common.vo.ReserveVO" id="reserve">
		<id column="RESERVE_CODE" 				property="reserveCode"/>
		<result column="ID" 					property="id"/>
		<result column="BOOK_CODE" 				property="bookCode"/>
		<result column="RENTABLE_START_DATE" 	property="rentableStartDate"/>	
		<result column="RENTABLE_END_DATE" 		property="rentableEndDate"/>
		<association property="bookVO" resultMap="book"/>
	</resultMap>

	<!-- 책 등록 -->
	<insert id="insertBook">
		INSERT INTO BOOK (
		    ISBN
		    , BOOK_CODE
		    , KDC
		    , KDC_NUM
		    , WRITER
		    , TRANSLATOR
		    , TITLE
		    , PAGE
		    , BOOK_SIZE
		    , KEYWORD
		    , PUBLISHER
		    , PUB_DATE
		    , SUMMARY
		    , INTRO
		    , AREA
		) VALUES (
		    #{isbn}
		    , (SELECT 'BOOK_'||LPAD(NVL(MAX(TO_NUMBER(SUBSTR(BOOK_CODE,6,4))),0) + 1,4,0) FROM BOOK)
		    , #{kdc}
		    , SUBSTR(#{kdc},1,1)
		    , #{writer}
		    , #{translator}
		    , #{title}
		    , #{page}
		    , #{bookSize}
		    , #{keyword}
		    , #{publisher}
		    , #{pubDate}
		    , #{summary}
		    , #{intro}
			, #{area}
		)
	</insert>
	
	<!-- 모든 도서(+ 이미지) 조회 -->
	<select id="selectBookList" resultMap="book">
		SELECT
            ISBN
		    , B.BOOK_CODE
		    , KDC
		    , C.KDC_NAME
		    , WRITER
		    , TRANSLATOR
		    , TITLE
		    , PAGE
		    , BOOK_SIZE
		    , KEYWORD
		    , PUBLISHER
		    , PUB_DATE
		    , SUMMARY
		    , INTRO
		    , INPUT_DATE
		    , AREA
		    , STATUS
		    , ATTACHED_IMG_NAME
		FROM BOOK B, BOOK_CATE C, BOOK_IMG I
		WHERE B.KDC_NUM = C.KDC_NUM
		AND B.BOOK_CODE = I.BOOK_CODE
		ORDER BY INPUT_DATE DESC
	</select>
	
	<!-- 모든 도서(+ 이미지) 조회 + 페이징 -->
	<select id="selectBookListPaging" resultMap="book">
		SELECT
            ROW_NUM
		    , ISBN
		    , BOOK_CODE
		    , KDC
		    , KDC_NAME
		    , WRITER
		    , TRANSLATOR
		    , TITLE
		    , PAGE
		    , BOOK_SIZE
		    , KEYWORD
		    , PUBLISHER
		    , PUB_DATE
		    , SUMMARY
		    , INTRO
		    , INPUT_DATE
		    , AREA
		    , STATUS
		    , ATTACHED_IMG_NAME
        FROM (
                SELECT ROWNUM AS ROW_NUM
                , ISBN
                , BOOK_CODE
                , KDC
                , KDC_NAME
                , WRITER
                , TRANSLATOR
                , TITLE
                , PAGE
                , BOOK_SIZE
                , KEYWORD
                , PUBLISHER
                , PUB_DATE
                , SUMMARY
                , INTRO
                , INPUT_DATE
                , AREA
                , STATUS
                , ATTACHED_IMG_NAME           
            FROM    (
                SELECT ROWNUM AS ROW_NUM
                , ISBN
                , B.BOOK_CODE
                , KDC
                , C.KDC_NAME
                , WRITER
                , TRANSLATOR
                , TITLE
                , PAGE
                , BOOK_SIZE
                , KEYWORD
                , PUBLISHER
                , PUB_DATE
                , SUMMARY
                , INTRO
                , INPUT_DATE
                , AREA
                , STATUS
                , ATTACHED_IMG_NAME        
                FROM
                BOOK B, BOOK_CATE C, BOOK_IMG I
                WHERE B.KDC_NUM = C.KDC_NUM
                AND B.BOOK_CODE = I.BOOK_CODE
				<if test="searchBegin != null and !searchBegin.equals('') and !searchEnd.equals('')">
				AND INPUT_DATE &gt;= TO_DATE(#{searchBegin},'YYYY-MM-DD')
				AND INPUT_DATE &lt;= TO_DATE(#{searchEnd},'YYYY-MM-DD')
				</if>
                ORDER BY INPUT_DATE DESC)
        )
        WHERE ROW_NUM &gt;= #{startNum} AND ROW_NUM &lt;= #{endNum}
	</select>
	
	<!-- 책 카테고리 목록 조회 -->
	<select id="selectCateList" resultMap="cate">
		SELECT
			KDC_NUM
			, KDC_NAME
		FROM BOOK_CATE
	</select>
	
	<!-- 상태별 도서 조회 (도서관리 페이지) -->
	<select id="selectStatusBookList" resultMap="book">
		SELECT
		    ISBN
		    , B.BOOK_CODE
		    , KDC
		    , C.KDC_NAME
		    , WRITER
		    , TRANSLATOR
		    , TITLE
		    , PAGE
		    , BOOK_SIZE
		    , KEYWORD
		    , PUBLISHER
		    , PUB_DATE
		    , SUMMARY
		    , INTRO
		    , INPUT_DATE
		    , AREA
		    , STATUS
		    , (SELECT ID FROM RESERVE WHERE BOOK_CODE = B.BOOK_CODE) AS RESERVE_ID
		    , (SELECT ID FROM RENTAL WHERE BOOK_CODE = B.BOOK_CODE AND RETURN_DATE IS NULL) AS RENTAL_ID
		FROM BOOK B, BOOK_CATE C
		WHERE B.KDC_NUM = C.KDC_NUM
		<if test="status != 0">
		AND STATUS = #{status}
		</if>
		ORDER BY INPUT_DATE DESC
	</select>	
	
	<!-- 상품 이미지 코드 숫자 생성 -->
	<select id="selectImgCodeNum" resultType="int">
		SELECT NVL(MAX(TO_NUMBER(SUBSTR(IMG_CODE,5,3))) + 1, 1) 
		FROM BOOK_IMG
	</select>
	
	<!-- 상품 이미지에 넣을 책 코드 생성 -->
	<select id="selectBookCode" resultType="String">
		SELECT 'BOOK_'||LPAD(NVL(MAX(TO_NUMBER(SUBSTR(BOOK_CODE,6,4))),0) + 1,4,0) 
		FROM BOOK
	</select>	
	
	<!-- 상품 이미지 등록 -->
	<insert id="insertBookImg">
		INSERT INTO BOOK_IMG (
		    IMG_CODE
		    , ORIGIN_IMG_NAME
		    , ATTACHED_IMG_NAME
		    , BOOK_CODE
		) VALUES (
		    #{bookImgVO.imgCode}
		    , #{bookImgVO.originImgName}
		    , #{bookImgVO.attachedImgName}
		    , #{bookImgVO.bookCode}
		)
	</insert>
	
	<!-- 도서 대여  -->
	<insert id="insertRental">
		INSERT INTO RENTAL (
		    RENTAL_CODE
		    , ID
		    , BOOK_CODE
		) VALUES (
		    (SELECT 'RENTAL_'||LPAD(NVL(MAX(TO_NUMBER(SUBSTR(RENTAL_CODE,8,4))),0) + 1,4,0) FROM RENTAL)
		    , #{id}
		    , #{bookCode}
		)
	</insert>
	
	<!-- 도서 상태 변경 -->
	<update id="updateBookStatus">
		UPDATE BOOK
		SET STATUS = #{status}
		WHERE BOOK_CODE = #{bookCode}
	</update>
	
	<!-- 도서 예약 -->
	<insert id="insertReserve">
		INSERT INTO RESERVE (
		      RESERVE_CODE
		    , ID
		    , BOOK_CODE
		) VALUES (
		    (SELECT 'RESERVE_'||LPAD(NVL(MAX(TO_NUMBER(SUBSTR(RESERVE_CODE,9,4))),0) + 1,4,0) FROM RESERVE)
		    , #{id}
		    , #{bookCode}
		)
	</insert>
	
	<!-- 도서 예약 데이터 삭제 -->
	<delete id="deleteReserve">
		DELETE RESERVE
		WHERE ID = #{reserveId}
		AND BOOK_CODE = #{bookCode}
	</delete>
	
	<!-- 도서 반납. 실제 도서 반납일 업데이트 -->
	<update id="updateReturnDate">
		UPDATE RENTAL 
		SET RETURN_DATE = SYSDATE
		WHERE ID = #{id}
		AND BOOK_CODE = #{bookCode} 
		AND RETURN_DATE IS NULL
	</update>
	
	<!-- 도서 반납. 도서 예약 기간 업데이트 -->
	<update id="updateReserveDate">
		UPDATE RESERVE
		SET RENTABLE_START_DATE = SYSDATE,
		RENTABLE_END_DATE = SYSDATE + 2
		WHERE BOOK_CODE = #{bookCode}
	</update>
	
	<!-- ID로 대여&예약 도서 객수 조회 -->
	<select id="selectIdAllCount" resultType="int">
		SELECT (SELECT COUNT(ID) FROM RENTAL WHERE ID = #{id} AND RETURN_DATE IS NULL)
		+ (SELECT COUNT(ID) FROM RESERVE WHERE ID = #{id}) AS COUNT_ID
		FROM DUAL	
	</select>
	
	<!-- ID로 회원여부 조회 -->
	<select id="selectIsMember" resultType="int">
		SELECT
		    COUNT(ID)
		FROM MEMBER
		WHERE ID = #{id}
		AND IS_DELETE = 'N'
	</select>
	
	<!-- 책 상세정보 조회 -->
	<select id="selectBookDetail" resultMap="book">
		SELECT
		    ISBN
		    , B.BOOK_CODE
		    , KDC
		    , C.KDC_NAME
		    , WRITER
		    , TRANSLATOR
		    , TITLE
		    , PAGE
		    , BOOK_SIZE
		    , KEYWORD
		    , PUBLISHER
		    , PUB_DATE
		    , SUMMARY
		    , INTRO
		    , INPUT_DATE
		    , AREA
		    , STATUS
		    , ATTACHED_IMG_NAME
            , (SELECT ID FROM RESERVE WHERE BOOK_CODE = #{bookCode}) AS RESERVE_ID
            , (SELECT ID FROM RENTAL WHERE BOOK_CODE = #{bookCode} AND RETURN_DATE IS NULL) AS RENTAL_ID
		FROM BOOK B, BOOK_CATE C, BOOK_IMG I
		WHERE B.KDC_NUM = C.KDC_NUM
		AND B.BOOK_CODE = I.BOOK_CODE
		AND B.BOOK_CODE = #{bookCode}
	</select>
	
	<!-- 페이징 처리를 위한 총 도서 수 조회 -->
	<select id="countBook" resultType="int">
		SELECT COUNT(BOOK_CODE)
		FROM BOOK
		<if test="searchBegin != null and !searchBegin.equals('') and !searchEnd.equals('')">
		WHERE INPUT_DATE &gt;= TO_DATE(#{searchBegin},'YYYY-MM-DD')
		AND INPUT_DATE &lt;= TO_DATE(#{searchEnd},'YYYY-MM-DD')
		</if>
	</select>
	
	<!-- 회원이 대여하고 있는 도서 정보 조회 -->
	<select id="selectMemberRentalList" resultMap="rental">
        SELECT
            B.BOOK_CODE
            , TITLE
            , WRITER
            , STATUS
            , TO_CHAR(RENTAL_DATE,'YYYY-MM-DD') AS RENTAL_DATE            
            , TO_CHAR(LIMIT_DATE,'YYYY-MM-DD') AS LIMIT_DATE
        FROM BOOK B, RENTAL R
        WHERE B.BOOK_CODE = R.BOOK_CODE
        AND ID = #{id}
        AND RETURN_DATE IS NULL	
	</select>
	
	<!-- 회원이 예약하고 있는 도서 정보 조회 -->
	<select id="selectMemberReserveList" resultMap="reserve">
        SELECT
            B.BOOK_CODE
            , TITLE
            , WRITER
            , STATUS
            , TO_CHAR(RENTABLE_START_DATE,'YYYY-MM-DD') AS RENTABLE_START_DATE
            , TO_CHAR(RENTABLE_END_DATE,'YYYY-MM-DD') AS RENTABLE_END_DATE
        FROM BOOK B, RESERVE R
        WHERE B.BOOK_CODE = R.BOOK_CODE
        AND ID = #{id}		
	</select>
	
	<!-- 도서 통합 검색 + 페이징 -->
	<select id="selectSearchBookAndPaging" resultMap="book">
	    SELECT
	        ROW_NUM
	            , ISBN
			    , BOOK_CODE
			    , KDC
			    , KDC_NAME
			    , WRITER
			    , TRANSLATOR
			    , TITLE
			    , PAGE
			    , BOOK_SIZE
			    , KEYWORD
			    , PUBLISHER
			    , PUB_DATE
			    , SUMMARY
			    , INTRO
			    , INPUT_DATE
			    , AREA
			    , STATUS
			    , ATTACHED_IMG_NAME    
	    FROM (
	            SELECT
	            ROWNUM AS ROW_NUM
	            , ISBN
			    , BOOK_CODE
			    , KDC
			    , KDC_NAME
			    , WRITER
			    , TRANSLATOR
			    , TITLE
			    , PAGE
			    , BOOK_SIZE
			    , KEYWORD
			    , PUBLISHER
			    , PUB_DATE
			    , SUMMARY
			    , INTRO
			    , INPUT_DATE
			    , AREA
			    , STATUS
			    , ATTACHED_IMG_NAME
	        FROM (
	            SELECT
	                ROWNUM AS ROW_NUM
	                , ISBN
	                , B.BOOK_CODE
	                , KDC
	                , C.KDC_NAME
	                , WRITER
	                , TRANSLATOR
	                , TITLE
	                , PAGE
	                , BOOK_SIZE
	                , KEYWORD
	                , PUBLISHER
	                , PUB_DATE
	                , SUMMARY
	                , INTRO
	                , INPUT_DATE
	                , AREA
	                , STATUS
	                , ATTACHED_IMG_NAME
	            FROM BOOK B, BOOK_CATE C, BOOK_IMG I
	            WHERE B.KDC_NUM = C.KDC_NUM
	            AND B.BOOK_CODE = I.BOOK_CODE
	            AND ( UPPER(TITLE) LIKE UPPER('%'||#{searchValue}||'%')
	            OR UPPER(WRITER) LIKE UPPER('%'||#{searchValue}||'%')
	            OR UPPER(TRANSLATOR) LIKE UPPER('%'||#{searchValue}||'%')
	            OR UPPER(PUBLISHER) LIKE UPPER('%'||#{searchValue}||'%')
	            OR UPPER(KEYWORD) LIKE UPPER('%'||#{searchValue}||'%')
	            OR UPPER(SUMMARY) LIKE UPPER('%'||#{searchValue}||'%')
	            OR UPPER(INTRO) LIKE UPPER('%'||#{searchValue}||'%') )
	            ORDER BY INPUT_DATE DESC
	            )
	    )
	    WHERE ROW_NUM &gt;= #{startNum} AND ROW_NUM &lt;= #{endNum}
	</select>

	<!-- 페이징 처리를 위한 검색 결과에 해당하는 총 도서 수 조회 -->
	<select id="countBookSearch" resultType="int">
		SELECT COUNT(BOOK_CODE)
		FROM BOOK
		WHERE UPPER(TITLE) LIKE UPPER('%'||#{title}||'%')
	            OR UPPER(WRITER) LIKE UPPER('%'||#{writer}||'%')
	            OR UPPER(TRANSLATOR) LIKE UPPER('%'||#{translator}||'%')
	            OR UPPER(PUBLISHER) LIKE UPPER('%'||#{publisher}||'%')
	            OR UPPER(KEYWORD) LIKE UPPER('%'||#{keyword}||'%')
	            OR UPPER(SUMMARY) LIKE UPPER('%'||#{summary}||'%')
	            OR UPPER(INTRO) LIKE UPPER('%'||#{intro}||'%') 
	</select>

	<!-- 도서 상세 검색 + 페이징 -->
	<select id="selectDetailSearchBookAndPaging" resultMap="book">
	    SELECT
	        ROW_NUM
	            , ISBN
			    , BOOK_CODE
			    , KDC
			    , KDC_NAME
			    , WRITER
			    , TRANSLATOR
			    , TITLE
			    , PAGE
			    , BOOK_SIZE
			    , KEYWORD
			    , PUBLISHER
			    , PUB_DATE
			    , SUMMARY
			    , INTRO
			    , INPUT_DATE
			    , AREA
			    , STATUS
			    , ATTACHED_IMG_NAME    
	    FROM (
	            SELECT
	            ROWNUM AS ROW_NUM
	            , ISBN
			    , BOOK_CODE
			    , KDC
			    , KDC_NAME
			    , WRITER
			    , TRANSLATOR
			    , TITLE
			    , PAGE
			    , BOOK_SIZE
			    , KEYWORD
			    , PUBLISHER
			    , PUB_DATE
			    , SUMMARY
			    , INTRO
			    , INPUT_DATE
			    , AREA
			    , STATUS
			    , ATTACHED_IMG_NAME
	        FROM (
	            SELECT
	                ROWNUM AS ROW_NUM
	                , ISBN
	                , B.BOOK_CODE
	                , KDC
	                , C.KDC_NAME
	                , WRITER
	                , TRANSLATOR
	                , TITLE
	                , PAGE
	                , BOOK_SIZE
	                , KEYWORD
	                , PUBLISHER
	                , PUB_DATE
	                , SUMMARY
	                , INTRO
	                , INPUT_DATE
	                , AREA
	                , STATUS
	                , ATTACHED_IMG_NAME
	            FROM BOOK B, BOOK_CATE C, BOOK_IMG I
	            WHERE B.KDC_NUM = C.KDC_NUM
	            AND B.BOOK_CODE = I.BOOK_CODE
	            <if test="kdcNum != 10">
	            AND KDC_NUM = #{kdcNum}
	            </if>
	            <if test="title != null and !title.equals('')">
	            AND UPPER(TITLE) LIKE UPPER('%'||#{title}||'%')
	            </if>
	            <if test="writer != null and !writer.equals('')">
	            AND UPPER(WRITER) LIKE UPPER('%'||#{writer}||'%')
	            </if>
	            <if test="translator != null and !translator.equals('')">
	            AND UPPER(TRANSLATOR) LIKE UPPER('%'||#{translator}||'%')
	            </if>
	            <if test="publisher != null and !publisher.equals('')">
	            AND UPPER(PUBLISHER) LIKE UPPER('%'||#{publisher}||'%')
	            </if>
	            <if test="isbn != null and !isbn.equals('')">
	            AND UPPER(ISBN) LIKE UPPER('%'||#{isbn}||'%')
	            </if>
	            <if test="searchBegin != null and !searchBegin.equals('')">
	            AND TO_DATE(PUB_DATE,'YYYY') &gt;= TO_DATE(#{searchBegin},'YYYY')
	            </if>
	            <if test="searchEnd != null and !searchEnd.equals('')">
	            AND TO_DATE(PUB_DATE,'YYYY') &lt;= TO_DATE(#{searchEnd},'YYYY')
	            </if>
	            ORDER BY INPUT_DATE DESC
	            )
	    )
	    WHERE ROW_NUM &gt;= #{startNum} AND ROW_NUM &lt;= #{endNum}
	</select>
	
	<!-- 페이징 처리를 위한 상세검색 결과에 해당하는 총 도서 수 조회 -->
	<select id="countBookDetailSearch" resultType="int">
		SELECT COUNT(BOOK_CODE)
		FROM BOOK
		WHERE 	LENGTH(BOOK_CODE) = 9
				<if test="kdcNum != 10">
	            AND KDC_NUM = #{kdcNum}
	            </if>
	            <if test="title != null and !title.equals('')">
	            AND UPPER(TITLE) LIKE UPPER('%'||#{title}||'%')
	            </if>
	            <if test="writer != null and !writer.equals('')">
	            AND UPPER(WRITER) LIKE UPPER('%'||#{writer}||'%')
	            </if>
	            <if test="translator != null and !translator.equals('')">
	            AND UPPER(TRANSLATOR) LIKE UPPER('%'||#{translator}||'%')
	            </if>
	            <if test="publisher != null and !publisher.equals('')">
	            AND UPPER(PUBLISHER) LIKE UPPER('%'||#{publisher}||'%')
	            </if>
	            <if test="isbn != null and !isbn.equals('')">
	            AND UPPER(ISBN) LIKE UPPER('%'||#{isbn}||'%')
	            </if>
	            <if test="searchBegin != null and !searchBegin.equals('')">
	            AND TO_DATE(PUB_DATE,'YYYY') &gt;= TO_DATE(#{searchBegin},'YYYY')
	            </if>
	            <if test="searchEnd != null and !searchEnd.equals('')">
	            AND TO_DATE(PUB_DATE,'YYYY') &lt;= TO_DATE(#{searchEnd},'YYYY')
	            </if>
	</select>
	
	<!-- 책 정보 수정 -->
	<update id="updateBookInfo">
		UPDATE BOOK
		SET 
			ISBN = #{isbn}
			, KDC = #{kdc}
			, KDC_NUM = SUBSTR(#{kdc},1,1)
			, WRITER = #{writer}
			, TRANSLATOR = #{translator}
			, TITLE = #{title}
			, PAGE = #{page}
			, BOOK_SIZE = #{bookSize}
			, KEYWORD = #{keyword}
			, PUBLISHER = #{publisher}
			, PUB_DATE = #{pubDate}
			, SUMMARY = #{summary}
			, INTRO = #{intro}
			, AREA = #{area}
		WHERE BOOK_CODE = #{bookCode}
	</update>
	
	
</mapper>












